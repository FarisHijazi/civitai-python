# coding: utf-8

"""
    Civitai Orchestration Consumer API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from civitai.models.provider_job_status import ProviderJobStatus

class TestProviderJobStatus(unittest.TestCase):
    """ProviderJobStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderJobStatus:
        """Test ProviderJobStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProviderJobStatus`
        """
        model = ProviderJobStatus()
        if include_optional:
            return ProviderJobStatus(
                support = 'Unsupported',
                queue_position = civitai.models.provider_job_queue_position.ProviderJobQueuePosition(
                    preceding_jobs = 56, 
                    preceding_cost = 1.337, 
                    throughput_rate = 1.337, 
                    worker_id = '', 
                    estimated_start_duration = civitai.models.time_span.TimeSpan(
                        ticks = 56, 
                        days = 56, 
                        hours = 56, 
                        milliseconds = 56, 
                        microseconds = 56, 
                        nanoseconds = 56, 
                        minutes = 56, 
                        seconds = 56, 
                        total_days = 1.337, 
                        total_hours = 1.337, 
                        total_milliseconds = 1.337, 
                        total_microseconds = 1.337, 
                        total_nanoseconds = 1.337, 
                        total_minutes = 1.337, 
                        total_seconds = 1.337, ), 
                    estimated_start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return ProviderJobStatus(
        )
        """

    def testProviderJobStatus(self):
        """Test ProviderJobStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
