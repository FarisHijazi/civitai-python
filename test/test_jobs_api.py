# coding: utf-8

"""
    Civitai Orchestration Consumer API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from civitai.api.jobs_api import JobsApi


class TestJobsApi(unittest.TestCase):
    """JobsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = JobsApi()

    def tearDown(self) -> None:
        pass

    def test_v1_consumer_jobs_delete(self) -> None:
        """Test case for v1_consumer_jobs_delete

        Cancel all jobs associated with a token
        """
        pass

    def test_v1_consumer_jobs_get(self) -> None:
        """Test case for v1_consumer_jobs_get

        Get the status of a previous submitted request by looking up the token
        """
        pass

    def test_v1_consumer_jobs_job_id_delete(self) -> None:
        """Test case for v1_consumer_jobs_job_id_delete

        Cancels a specific job by looking it up by jobId
        """
        pass

    def test_v1_consumer_jobs_job_id_get(self) -> None:
        """Test case for v1_consumer_jobs_job_id_get

        Get the status of a job by looking up the jobId
        """
        pass

    def test_v1_consumer_jobs_job_id_put(self) -> None:
        """Test case for v1_consumer_jobs_job_id_put

        Taint a specific job by its id
        """
        pass

    def test_v1_consumer_jobs_post(self) -> None:
        """Test case for v1_consumer_jobs_post

        Submits a new job for processing
        """
        pass

    def test_v1_consumer_jobs_put(self) -> None:
        """Test case for v1_consumer_jobs_put

        Taint all jobs that match particular properties or belong to a token
        """
        pass

    def test_v1_consumer_jobs_query_post(self) -> None:
        """Test case for v1_consumer_jobs_query_post

        Query for previously submitted jobs by looking up the properties
        """
        pass


if __name__ == '__main__':
    unittest.main()
